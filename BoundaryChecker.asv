classdef BoundaryChecker
    properties
        l
        lr_boundary
        tb_boundary
    end

    methods
        function obj = BoundaryChecker(l)
            % 构造函数
            obj.l = l;

            % 左右边界（n*(l-1)+1, n从0到l-2）
            n_values = 0:(l-2);
            obj.lr_boundary = n_values * (l - 1) + 1;
            obj.lr_boundary = [obj.lr_boundary, 1];
            disp(['左右边界顶点: ', num2str(obj.lr_boundary)]);

            % 上边界（[1:l-1, 1]）
            obj.tb_boundary = [1:(l-1), 1];
            disp(['上下边界顶点: ', num2str(obj.tb_boundary)]);
        end

        function [isLeft, isRight, isTop, isBottom, isPermeate] = checkTriangles(obj, triangles)
            % 初始化边界状态
            isLeft = false;
            isRight = false;
            isTop = false;
            isBottom = false;
            isPermeate = false;

            % 遍历所有三角形
            for i = 1:size(triangles, 1)
                a = triangles(i, 1);
                b = triangles(i, 2);
                c = triangles(i, 3);
                vertices = [a, b, c];
                
                % 计算顶点差值
                diff = max(vertices) - min(vertices);
                
                % 检查左边界（差值条件）
                if ~isLeft && (diff == obj.l || diff == obj.l^2 - 3*obj.l + 2)
                    isLeft = true;
                end
                
                % 检查右边界（差值条件）
                if ~isRight && (diff == obj.l-1 || diff == (obj.l-1)^2)
                    isRight = true;
                end

                % 检查上下边界（根据差值）
                if ~isTop && diff <= obj.l
                    isTop = true;
                end
                
                if ~isBottom && diff > obj.l
                    isBottom = true;
                end

                % 检查是否贯穿
                if (isLeft && isRight) || (isTop && isBottom)
                    isPermeate = true;
                end

                % 如果所有边界都已满足，提前退出循环
                if  isPermeate
                    break;
                end
            end
        end
    end
end